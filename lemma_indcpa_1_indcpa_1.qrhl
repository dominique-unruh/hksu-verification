include "indcpa_enc_1.qrhl".
include "indcpa_enc0_1.qrhl".

# GRAPH: EQ("indcpa_1_indcpa_1","indcpa_enc_1","indcpa_enc0_1")
lemma indcpa_1_indcpa_1: Pr[b=1:indcpa_enc_1(rho)] = Pr[b=1:indcpa_enc0_1(rho)].
 byqrhl.
 inline indcpa_enc_1.
 inline indcpa_enc0_1.
 inline Adv_INDCPA_enc0_1.
 inline Adv_INDCPA_enc0_2.

 equal.
  simp!.
 conseq post: ℭ𝔩𝔞[mstar1 = mstar2 ∧ in_cstar1 = in_cstar2 ∧ in_pk1 = in_pk2 ∧ classA1 = classA2 ∧ b1 = b2 ∧ is_puncture1 = is_puncture2 ∧ G1 = G2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.

 # in_pk,in_cstar
 wp 2 2.
 conseq post: ℭ𝔩𝔞[mstar1 = mstar2 ∧ cstar1 = cstar2 ∧ pk1 = pk2 ∧ classA1 = classA2 ∧ b1 = b2 ∧ is_puncture1 = is_puncture2 ∧ G1 = G2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.

 # cstar
 rnd.
 conseq post: ℭ𝔩𝔞[m1star1=m1star2 & mstar1 = mstar2 ∧ cstar1 = cstar2 ∧ pk1 = pk2 ∧ classA1 = classA2 ∧ b1 = b2 ∧ is_puncture1 = is_puncture2 ∧ G1 = G2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp! enc_def enc0_def encr_def.

 # m0star, m1star
 wp 2 4.
 conseq post: ℭ𝔩𝔞[m1star1=m1star2 & mstar1 = mstar2 ∧ cstar1 = cstar2 ∧ pk1 = pk2 ∧ classA1 = classA2 ∧ b1 = b2 ∧ is_puncture1 = is_puncture2 ∧ G1 = G2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.

 # Adv_INDCPA_enc_1
 equal.
  simp!.
 conseq post: ℭ𝔩𝔞[m1star1=m1star2 & mstar1 = mstar2 ∧ cstar1 = cstar2 ∧ pk1 = pk2 ∧ classA1 = classA2 ∧ b1 = b2 ∧ is_puncture1 = is_puncture2 ∧ G1 = G2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.

 # in_pk
 wp 1 1.
 
 # pk,sk
 rnd.
 conseq post: ℭ𝔩𝔞[m1star1=m1star2 & mstar1 = mstar2 ∧ cstar1 = cstar2 ∧ classA1 = classA2 ∧ b1 = b2 ∧ is_puncture1 = is_puncture2 ∧ G1 = G2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp! keygen_def.

 skip.
 simp!.
qed.




