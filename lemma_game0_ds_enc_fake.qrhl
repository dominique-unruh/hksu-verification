include "game0.qrhl".
include "ds_enc_fake.qrhl".

# GRAPH: EQ("game0_ds_enc_fake","game0","ds_enc_fake")
lemma game0_ds_enc_fake: Pr[b=1 : game0(rho)] = Pr[b=1 : ds_enc_fake(rho)].
 byqrhl.
 inline game0.
 inline ds_enc_fake.
 inline Adv_DS_enc.

 # Removing G
 conseq pre: ℭ𝔩𝔞[pk1 = pk2 ∧ sk1 = sk2 ∧ mstar1 = mstar2 ∧ cstar1 = cstar2 ∧ in_pk1 = in_pk2 ∧ in_cstar1 = in_cstar2 ∧ classA1 = classA2 ∧ b1 = b2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.
 local up G.
 local remove right.
  simp!.

 equal.
  simp!.
 conseq post: ℭ𝔩𝔞[in_cstar1 = in_cstar2 ∧ in_pk1 = in_pk2 ∧ classA1 = classA2 ∧ b1 = b2 ∧ G1=G2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.

 # move G
 swap right 5-5 1-4.

 wp 2 2.
 conseq post: ℭ𝔩𝔞[pk1=pk2 ∧ cstar1=cstar2 ∧ classA1 = classA2 ∧ b1 = b2 ∧ G1=G2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.

 # cstar
 rnd.
 conseq post: ℭ𝔩𝔞[pk1=pk2 ∧ classA1 = classA2 ∧ b1 = b2 ∧ G1=G2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.

 wp left.
 conseq post: ℭ𝔩𝔞[pk1=pk2 ∧ classA1 = classA2 ∧ b1 = b2 ∧ G1=G2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.

 rnd.
 rnd.
 conseq post: ℭ𝔩𝔞[classA1 = classA2 ∧ b1 = b2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.

 skip.
 simp!.
qed.
