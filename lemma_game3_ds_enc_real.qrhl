include "game3.qrhl".
include "ds_enc_real.qrhl".

# GRAPH: EQ("game3_ds_enc_real","game3","ds_enc_real")
lemma game3_ds_enc_real: Pr[b=1 : game3(rho)] = Pr[b=1 : ds_enc_real(rho)].
 byqrhl.
 inline game3.
 inline ds_enc_real.
 inline Adv_DS_enc.

 # removing G
 conseq pre: ℭ𝔩𝔞[pk1 = pk2 ∧ sk1 = sk2 ∧ mstar1 = mstar2 ∧ rstar1 = rstar2 ∧ cstar1 = cstar2 ∧ in_pk1 = in_pk2 ∧ in_cstar1 = in_cstar2 ∧ classA1 = classA2 ∧ b1 = b2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.
 local up G.
 local remove right.
  simp!.

 equal.
  simp!.
 conseq post: ℭ𝔩𝔞[G1=G2 ∧ in_pk1=in_pk2 ∧ in_cstar1=in_cstar2 ∧ b1=b2 ∧ classA1=classA2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.
 
 # G
 swap right 1 5.

 wp 2 2.
 conseq post: ℭ𝔩𝔞[G1=G2 ∧ pk1=pk2 ∧ cstar1=cstar2 ∧ b1=b2 ∧ classA1=classA2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp!.

 wp left.
 rnd rstar,cstar <- map_distr (λr. (r, encr () pk1 mstar1 r)) (uniform UNIV).
 conseq post: ℭ𝔩𝔞[mstar1=mstar2 ∧ G1 = G2 ∧ pk1 = pk2 ∧ b1 = b2 ∧ classA1 = classA2] ⊓ ⟦quantA1⟧ ≡𝔮 ⟦quantA2⟧.
  simp! enc_def.

 rnd.
 rnd.
 rnd.
 skip.
 simp!.
qed.
