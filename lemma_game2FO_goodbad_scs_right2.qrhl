# Autogenerated file (by replacing game1FO -> game2FO, decapsQuery1 -> decapsQuery2 in lemma_game1FO_goodbad_scs_right2.qrhl)

include "game2FO_goodbad_scs_right1.qrhl".
include "game2FO_goodbad_scs_right2.qrhl".
include "lemma_Adv_O2H_Game2FO_lossless_C_Gmeas.qrhl".



# GRAPH: EQ("game2FO_goodbad_scs_right2","game2FO_goodbad_scs_right1","game2FO_goodbad_scs_right2")
lemma game2FO_goodbad_scs_right2: Pr[b=1 : game2FO_goodbad_scs_right1(rho)] = Pr[b=1 : game2FO_goodbad_scs_right2(rho)].
 byqrhl.
 inline game2FO_goodbad_scs_right1.
 inline game2FO_goodbad_scs_right2.

 rnd.
 # Already splitting postcondition to make it understandable for frame-tactic later.
 conseq post: top ⊓ Cla[z'1=z'2].
  simp!.

 seq 4 1: top ⊓ Cla[z'1=z'2].

 # G
 wp left.
 conseq post: Cla[z'1=z'2].
  simp! Rgood'_ex.
 
 # z'
 rnd.
 conseq post: top.
  simp!.
 
 # count, stop_at
 wp 2 0.
 skip.
 simp!.
 
 # Adv_O2H_Game2FO(Count(queryGmeasured))

 frame.
  simp!.
 
 rule Adv_O2H_Game2FO_lossless_C_Gmeas.
qed.

